####
## log server
##

# nginxのLTSV形式のアクセスログを読み込みます。
#  /var/log/nginx/access.log
#    -> raw.nginx.access
<source>
  type tail
  path /var/log/nginx/access.log
  format ltsv
  pos_file /var/log/td-agent/event_access.pos
  tag raw.nginx.access
</source>

# アクセスログのURLからパスとクエリ文字列を分離します。
#  raw.nginx.access
#    -> parsed.nginx.access
<match raw.nginx.access>
  type parser
  reserve_data yes
  key_name uri
  format /^(?<path>[^?]+)(\?(?<query>.+))?$/
  tag parsed.nginx.access
</match>

# クエリ文字列を要素ごとに分解します。
#  parsed.nginx.access
#    -> splited.nginx.access
<match parsed.nginx.access>
  type fields_parser
  remove_tag_prefix parsed
  add_tag_prefix splited
  parse_key query
  pattern ([\w|\.]+)=([^ &]*)
</match>

# 不要なログを除去してイベントパス名(search,imp,click,cv)をタグに付与します。
#  splited.nginx.access
#    -> filtered.nginx.access.<イベントパス名>
<match splited.nginx.access>
  type rewrite
  remove_prefix splited
  add_prefix filtered
  # 200系と304以外は除去
  <rule>
    key     status
    pattern ^(?!20*|304)\d+$
    ignore  true
  </rule>
  # GETメソッド以外は除去
  <rule>
    key     method
    pattern ^(?!GET).+$
    ignore  true
  </rule>
  # ルートディレクトリは除去
  <rule>
    key     path
    pattern ^\/$
    ignore  true
  </rule>
  # ルートディレクトリは除去
  <rule>
    key     path
    pattern ^\/(\?.+$|index.html)
    ignore  true
  </rule>
  # イベントパス名をタグの末尾に付与
  <rule>
    key     path
    pattern ^\/(search|imp|click|cv)
    append_to_tag true
    fallback others # 上記以外のパスはothersでタグ付け
  </rule>
</match>

# 除去しきれなかったリクエストへの対応です。
# イベントパスに一致しないリクエストはスキップします。
# filtered.nginx.access.others
#    -> 以降の処理をせず終了
<match filtered.nginx.access.others>
  type null
</match>

# URLエンコードしたkeywordの値をデコードします。
# search以外はタグのみ付与で処理しません。
# filtered.nginx.access
#    -> decoded.nginx.access.<イベントパス名>
<match filtered.nginx.access.**>
  type forest
  subtype uri_decode
  <template>
    remove_prefix filtered
    add_prefix decoded
  </template>
  <case **.search>
    key_name keyword
  </case>
</match>

# S3に出力します。
#  decoded.nginx.access
#    -> s3:mal-dev.logserver/<イベントパス名>/2015/7/24/15/172.31.28.252/2015724155.json
<match decoded.nginx.access.**>
  type forest
  subtype s3

  <template>
    # S3への接続情報はIAMロールの設定で対応
    s3_bucket {{ s3_bucket_logserver }}
    s3_region ap-northeast-1

    format json
    store_as json

    # 日時のログ出力設定
    include_time_key true
    # 日時の要素名
    time_key logdatetime
    # 日時要素の書式
    time_format %Y-%m-%d %H:%M:%S

    # S3出力パス
    path ${tag_parts[3]}/%Y/%m/%d/%H/%{hostname}/
    buffer_path /var/log/td-agent/buffer/s3/${tag_parts[3]}

    # ファイル書式と分割単位(1分ごとに分割してS3に出力)
    time_slice_format %Y%m%d%H%M
    # 出力遅延時間
    time_slice_wait 1s
    # 1ファイル当たりのサイズ上限(上限を超えると自動分割する)
    buffer_chunk_limit 6m

    retry_wait 5s
    retry_limit 10
    flush_at_shutdown true

  </template>

  # searchログの場合はS3のバケットを変更
  <case **.search>
    s3_bucket {{ s3_bucket_logserver_search }}
  </case>

  # conversionログの場合は出力遅延時間を90sに設定
  <case **.cv>
    time_slice_wait 90s
  </case>
</match>
